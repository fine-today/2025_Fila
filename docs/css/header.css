.header {
		position: relative;
		z-index: 110;
		height: 100px;
		background-color: #fff;
}
.header > .logo {
		position: absolute;
		width: 0;
		height: 0;
		opacity: 0;
}
.header .menu-wrap {
		position: absolute;
		padding: 0 100px;
		width: 100%;
		height: 100px;
		overflow: hidden;
		transition: all 0.2s;
}
.header .menu-wrap::before {
		display: block;
		position: absolute;
		width: 100%;
		height: 100%;
		background-color: var(--c-white);
		left: 0;
		top: 100px;
}
.header .menu-btn {
		display: none;
}
@media (min-width: 1201px) {
		.header #menu {
				display: flex;
				justify-content: center;
		}
		.header #menu .depth-anchor {
				display: flex;
				align-items: center;
		}
		.header #menu .depth1-list {
				padding-top: 30px;
				width: 100%;
				display: flex;
				justify-content: space-between;
		}
		.header #menu .depth1-item.logo {
				position: static;
		}
		.header #menu .depth1-item.logo svg {
				overflow: auto;
				display: inline-block;
		}
		.header #menu .depth1-item .depth1-anchor {
				height: 40px;
				font-size: 1.6rem;
				font-weight: 700;
				line-height: 1.8;
				color: var(--c-primary);
		}
		.header #menu .depth2 {
				position: absolute;
		}
		.header #menu .depth2-list {
				display: flex;
				flex-wrap: wrap;
				gap: 15px;
				padding-top: 20px;
		}
		.header #menu .depth2-item {
				width: 100%;
		}
		.header #menu .depth2-item .depth2-anchor {
				position: relative;
				height: 40px;
				font-size: 16px;
				line-height: 1.8;
				font-weight: 600;
				color: var(--c-black);
		}
		.header #menu .depth2-item .depth2-anchor span {
				position: relative;
		}
		.header #menu .depth2-item .depth2-anchor span::before {
				display: block;
				position: absolute;
				left: 0;
				bottom: 0;
				width: 0;
				height: 1px;
				background-color: var(--c-black);
				transition: all 0.1s;
		}
		.header #menu .depth2-item:hover .depth2-anchor span::before {
				width: 100%;
		}
}
.header .lang {
		position: absolute;
		right: 40px;
		top: 34px;
		width: 48px;
		height: 32px;
		overflow: hidden;
		border-radius: 50px;
		background-color: var(--c-black);
}
.header .lang .lang-wrap {
		display: flex;
		flex-direction: column;
		font-size: 1.6rem;
		line-height: 1.8;
		font-weight: 700;
		color: var(--c-white);
}
.header .lang .lang-wrap span {
		transition: all 0.1s;
}
.header .lang:hover .lang-wrap span {
		transform: translateY(-1.8em);
}

/* menu-open */
[data-menu-open=true] #container {
		position: relative;
}
[data-menu-open=true] #container::before {
		display: block;
		position: fixed;
		z-index: 10;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.4);
}

@media (max-width: 1200px) {
		.header .menu-wrap {
				position: fixed;
				right: 0;
				top: 0;
				height: 100% !important;
				width: 100%;
				overflow: auto;
				background-color: var(--c-white);
		}
		.header .menu-wrap::before {
				display: none;
		}
		.header .menu-btn {
				display: block;
				position: absolute;
				z-index: 100;
		}
		.header #menu .depth1-list {
				display: flex;
				gap: 10px;
				flex-wrap: wrap;
		}
		.header #menu .depth1-item {
				width: 100%;
		}
		.header #menu .depth1-item .depth1-anchor {
				font-size: 48px;
				line-height: 1.4;
				font-weight: 700;
				color: var(--c-black);
		}
		.header #menu .depth1-item.active .depth2-item, .header #menu .depth1-item.actived .depth2-item {
				display: flex;
		}
		.header #menu .depth2-item {
				display: none;
				gap: 10px;
				flex-wrap: wrap;
		}
		.header #menu .depth2-item .depth2-anchor {
				font-size: 18px;
				line-height: 1.6;
				font-weight: 700;
				color: var(--c-black);
		}
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
